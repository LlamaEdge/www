"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9271],{5713:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var i=s(4848),t=s(8453);const r={sidebar_position:3},a="Register and Unregister",c={id:"llama-nexus/register",title:"Register and Unregister",description:"Llama Nexus supports all common LLM services. Your API service must follow OpenAI specifications.",source:"@site/docs/llama-nexus/register.md",sourceDirName:"llama-nexus",slug:"/llama-nexus/register",permalink:"/docs/llama-nexus/register",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/llama-nexus/register.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Qucik start with the MCP support",permalink:"/docs/llama-nexus/mcp/quick-start-with-mcp"},next:{title:"CLI Options",permalink:"/docs/llama-nexus/cli"}},l={},o=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Service Registration",id:"service-registration",level:2},{value:"Chat Service",id:"chat-service",level:3},{value:"Embedding Service",id:"embedding-service",level:3},{value:"Image Generation Service",id:"image-generation-service",level:3},{value:"Speech to Text Service",id:"speech-to-text-service",level:3},{value:"Text to Speech Service",id:"text-to-speech-service",level:3},{value:"Unregister",id:"unregister",level:2},{value:"Notes",id:"notes",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"register-and-unregister",children:"Register and Unregister"}),"\n",(0,i.jsx)(n.p,{children:"Llama Nexus supports all common LLM services. Your API service must follow OpenAI specifications."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Llama Nexus server running (default port: 9095)"}),"\n",(0,i.jsx)(n.li,{children:"Target services running and accessible"}),"\n",(0,i.jsx)(n.li,{children:"Services implementing OpenAI-compatible APIs"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"service-registration",children:"Service Registration"}),"\n",(0,i.jsx)(n.h3,{id:"chat-service",children:"Chat Service"}),"\n",(0,i.jsxs)(n.p,{children:["Register a chat completion service that handles ",(0,i.jsx)(n.code,{children:"/v1/chat/completions"})," requests:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl --location \'http://localhost:3389/admin/servers/register\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "url": "http://localhost:8080",\n    "kind": "chat"\n}\'\n'})}),"\n",(0,i.jsx)(n.h3,{id:"embedding-service",children:"Embedding Service"}),"\n",(0,i.jsxs)(n.p,{children:["Register an embedding service that handles ",(0,i.jsx)(n.code,{children:"/v1/embeddings"})," requests:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl --location \'http://localhost:3389/admin/servers/register\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "url": "https://0x448f0405310a9258cd5eab5f25f15679808c5db2.gaia.domains",\n    "kind": "embeddings"\n}\'\n'})}),"\n",(0,i.jsx)(n.h3,{id:"image-generation-service",children:"Image Generation Service"}),"\n",(0,i.jsxs)(n.p,{children:["Register an image generation service that handles ",(0,i.jsx)(n.code,{children:"/v1/images/generations"})," requests:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl --location \'http://localhost:3389/admin/servers/register\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "url": "http://localhost:10010",\n    "kind": "image"\n}\'\n'})}),"\n",(0,i.jsx)(n.h3,{id:"speech-to-text-service",children:"Speech to Text Service"}),"\n",(0,i.jsxs)(n.p,{children:["Register a transcription service that handles ",(0,i.jsx)(n.code,{children:"/v1/audio/transcriptions"})," requests:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl --location \'http://localhost:3389/admin/servers/register\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "url": "http://localhost:10010",\n    "kind": "transcribe"\n}\'\n'})}),"\n",(0,i.jsx)(n.h3,{id:"text-to-speech-service",children:"Text to Speech Service"}),"\n",(0,i.jsxs)(n.p,{children:["Register a text-to-speech service that handles ",(0,i.jsx)(n.code,{children:"/v1/audio/speech"})," requests:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl --location \'http://localhost:3389/admin/servers/register\' \\\n--header \'Content-Type: application/json\' \\\n--data \'{\n    "url": "http://localhost:10010",\n    "kind": "tts"\n}\'\n'})}),"\n",(0,i.jsx)(n.h2,{id:"unregister",children:"Unregister"}),"\n",(0,i.jsx)(n.p,{children:"To be add"}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"All services must implement OpenAI-compatible APIs"}),"\n",(0,i.jsxs)(n.li,{children:["URLs can be local (",(0,i.jsx)(n.code,{children:"http://localhost:port"}),") or remote (",(0,i.jsx)(n.code,{children:"https://domain.com"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Services are automatically load-balanced if multiple instances of the same kind are registered"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);