"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3425],{9320:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var a=n(4848),o=n(8453);const s={sidebar_position:2},i="LobeChat",c={id:"llama-nexus/openai-api/lobechat",title:"LobeChat",description:"The LobeChat framework is a modern chatbot framework that supports a wide range of",source:"@site/docs/llama-nexus/openai-api/lobechat.md",sourceDirName:"llama-nexus/openai-api",slug:"/llama-nexus/openai-api/lobechat",permalink:"/docs/llama-nexus/openai-api/lobechat",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/llama-nexus/openai-api/lobechat.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Start the llama-nexus API service",permalink:"/docs/llama-nexus/openai-api/intro"},next:{title:"AI coding assistant: Continue",permalink:"/docs/llama-nexus/openai-api/continue"}},r={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps to integrate LobeChat and LlamaEdge",id:"steps-to-integrate-lobechat-and-llamaedge",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"lobechat",children:"LobeChat"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.a,{href:"https://github.com/lobehub/lobe-chat",children:"LobeChat"})," framework is a modern chatbot framework that supports a wide range of\nAI models and custom plugins.\nYou can use configure it to use LlamaEdge as the backend Large Language Model (LLM) replacing OpenAI. This integration supports:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"The hosted LobeChat service"}),"\n",(0,a.jsx)(t.li,{children:"Any product built on the open-source LobeChat framework"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(t.p,{children:["Follow ",(0,a.jsx)(t.a,{href:"/docs/llama-nexus/openai-api/intro",children:"this guide"})," to run an open-source LLM locally."]}),"\n",(0,a.jsx)(t.h2,{id:"steps-to-integrate-lobechat-and-llamaedge",children:"Steps to integrate LobeChat and LlamaEdge"}),"\n",(0,a.jsxs)(t.p,{children:["Open the ",(0,a.jsx)(t.a,{href:"https://chat-preview.lobehub.com/settings/modal?agent=&session=inbox&tab=llm&topic=CIfo1UYZ",children:"LobeChat Language Model setting page"})," and choose the first one OpenAI."]}),"\n",(0,a.jsxs)(t.p,{children:["First, Enter some random characters in the OpenAI API Key field, and input ",(0,a.jsx)(t.code,{children:"http://localhost:8080/v1"})," in the API Proxy Address field."]}),"\n",(0,a.jsx)(t.p,{children:"Then, enable the Client-Side Fetching Mode."}),"\n",(0,a.jsx)(t.p,{children:"Next, Click on the Get Model List button to automatically detect the model you're using. Select that model from the list."}),"\n",(0,a.jsx)(t.p,{children:"Finally, you can click on the Check button to check the connect status."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:n(2103).A+"",width:"2036",height:"1044"})}),"\n",(0,a.jsxs)(t.p,{children:["After that, go back to ",(0,a.jsx)(t.a,{href:"https://chat-preview.lobehub.com/chat?session=inbox&agent=",children:"the chat page"})," and choose the model you just chose in the previous step. Now you can chat with the model via LobeChat."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:n(1468).A+"",width:"2390",height:"628"})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},2103:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/lobechat-llamaedge-01-4291c54433f07773ab94b2bcf7c3093d.png"},1468:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/lobechat-llamaedge-02-519eceee5739e8a57d83cfbed2268ec8.png"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var a=n(6540);const o={},s=a.createContext(o);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);